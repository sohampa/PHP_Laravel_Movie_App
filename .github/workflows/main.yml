name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main 

permissions:
  contents: read

env:
  DOCKERHUB_REPO: sohampa/php-backend-laravel
  AWS_REGION: us-east-1
  ECS_CLUSTER: soham-php-laravel-app
  ECS_SERVICE: soham-php-laravel-backend-service
  ECS_TASK_FAMILY: soham-php-laravel-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push image
      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building image: ${{ env.DOCKERHUB_REPO }}:$IMAGE_TAG"

          docker build -t ${{ env.DOCKERHUB_REPO }}:$IMAGE_TAG .
          docker push ${{ env.DOCKERHUB_REPO }}:$IMAGE_TAG

      # (Optional) Tag as "latest"
      - name: Tag as latest
        run: |
          docker tag ${{ env.DOCKERHUB_REPO }}:${{ github.sha }} ${{ env.DOCKERHUB_REPO }}:latest
          docker push ${{ env.DOCKERHUB_REPO }}:latest

      - name: Update ECS Task Definition
        run: |
          # Fetch current task definition
          aws ecs describe-task-definition \
            --task-definition $ECS_TASK_FAMILY \
            --query taskDefinition > task-def.json

          # Remove read-only fields
          cat task-def.json | jq 'del(
            .taskDefinitionArn,
            .revision,
            .status,
            .requiresAttributes,
            .compatibilities,
            .registeredAt,
            .registeredBy
          )' > new-task-def.json

          # Update image
          jq --arg IMAGE "$NEW_IMAGE" \
            '.containerDefinitions[0].image = $IMAGE' new-task-def.json \
            > final-task-def.json

          # Register new revision
          aws ecs register-task-definition \
            --cli-input-json file://final-task-def.json

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment
