# image: docker:latest



# stages:
#   - build_and_push

# services:
#   - docker:dind

# variables:
#   DOCKER_DRIVER: overlay2
#   DOCKER_TLS_CERTDIR: ""
#   DOCKER_HOST: tcp://docker:2375/
#   IMAGE_NAME: myapp_docker_image
#   DOCKER_REGISTRY: docker.io  # Docker Hub registry
#   DOCKER_USERNAME: onkarko1106  # Your Docker Hub username
#   DOCKER_PASSWORD: onkarko1106  # Your Docker Hub password


# before_script:
#   - docker info

# # Build and Push Docker Image in a Single Stage
# build_and_push:
#   stage: build_and_push
#   script:
#     # Build the Docker image
#     - docker build -t $DOCKER_USERNAME/$IMAGE_NAME:v2.1 .
#     # Push the Docker image to Docker Hub
#     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin $DOCKER_REGISTRY
#     - docker push $DOCKER_USERNAME/$IMAGE_NAME:v2.1
#   # No need for saving/loading or artifact handling


# oidc-connect:
#   stage: oidc-connect
#   image:
#     name: "amazon/aws-cli:latest"
#     entrypoint: [""]
#   id_tokens:                      
#     AWS_ID_TOKEN:
#       aud: https://gitlab.com
#   variables:
#     AWS_REGION: us-east-1
#     AWS_PROFILE: oidc
#   before_script:
#     - mkdir -p ~/.aws
#     # Write the GitLab OIDC token into file
#     - echo "${AWS_ID_TOKEN}" > /tmp/web_identity_token
#     # Configure AWS CLI to use OIDC role
#     - |
#       echo -e "[profile oidc]
#       role_arn=${AWS_ROLE_ARN}
#       web_identity_token_file=/tmp/web_identity_token
#       region=${AWS_REGION}" > ~/.aws/config
#     # (optional) Debug check
#     - echo "Token length:$(wc -c < /tmp/web_identity_token)"
#   script:
#     # Try logging in to ECR
#     - aws ecr get-authorization-token --region ${AWS_REGION}
#     # Or list repositories (if any exist)
#     - aws ecr describe-repositories --region ${AWS_REGION}



stages:
  # - oidc-connect
  - build-and-push

ecr-build-and-push:
  stage: build-and-push
  image: docker:latest
  services:
    - docker:dind
  id_tokens:
    AWS_ID_TOKEN:
      aud: https://gitlab.com
  variables:
    AWS_REGION: us-east-1
    ECR_REPO: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME
  before_script:
    - apk add --no-cache python3 py3-pip
    - apk add --no-cache aws-cli
    - mkdir -p ~/.aws
    - echo "${AWS_ID_TOKEN}" > /tmp/web_identity_token
    - |
      echo -e "[profile oidc]\nrole_arn=${AWS_ROLE_ARN}\nweb_identity_token_file=/tmp/web_identity_token\nregion=${AWS_REGION}" > ~/.aws/config
    - export AWS_PROFILE=oidc
    - aws --profile oidc ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  script:
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA .
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHA $ECR_REPO:$CI_COMMIT_SHA
    - docker push $ECR_REPO:$CI_COMMIT_SHA
